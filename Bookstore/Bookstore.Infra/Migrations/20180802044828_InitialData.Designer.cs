// <auto-generated />
using System;
using Bookstore.Infra;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Bookstore.Infra.Migrations
{
    [DbContext(typeof(BookstoreContext))]
    [Migration("20180802044828_InitialData")]
    partial class InitialData
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.1-rtm-30846")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Bookstore.Domain.Entities.Author", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime?>("Birthdate");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(100);

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(100);

                    b.HasKey("Id");

                    b.ToTable("Authors");

                    b.HasData(
                        new { Id = new Guid("12ded001-2e9e-4917-a1a0-cf21555d4cd1"), FirstName = "Douglas", LastName = "Adams" },
                        new { Id = new Guid("12ded001-2e9e-4917-a1a0-cf21555d4cd2"), Birthdate = new DateTime(1945, 7, 2, 0, 0, 0, 0, DateTimeKind.Unspecified), FirstName = "Eric", LastName = "Evans" }
                    );
                });

            modelBuilder.Entity("Bookstore.Domain.Entities.Book", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<Guid>("AuthorId");

                    b.Property<string>("Synopsis")
                        .HasColumnType("TEXT");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(100);

                    b.HasKey("Id");

                    b.HasIndex("AuthorId");

                    b.ToTable("Books");

                    b.HasData(
                        new { Id = new Guid("90660dd0-bfe6-4424-a5fe-13d5a301984e"), AuthorId = new Guid("12ded001-2e9e-4917-a1a0-cf21555d4cd1"), Synopsis = "", Title = "The Hitchhiker's Guide to the Galaxy" },
                        new { Id = new Guid("6ffa55c1-2c17-4d39-93d4-2362b42c433c"), AuthorId = new Guid("12ded001-2e9e-4917-a1a0-cf21555d4cd1"), Synopsis = "", Title = "Dirk Gently's Holistic Detective Agency" },
                        new { Id = new Guid("9fff44e9-727c-4d86-91ba-593c01fc116d"), AuthorId = new Guid("12ded001-2e9e-4917-a1a0-cf21555d4cd2"), Synopsis = "", Title = "Domain Driven Design" }
                    );
                });

            modelBuilder.Entity("Bookstore.Domain.Entities.Book", b =>
                {
                    b.HasOne("Bookstore.Domain.Entities.Author", "Author")
                        .WithMany()
                        .HasForeignKey("AuthorId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
